let i:int = 1;
const j:int = 2;
const t: double = (i + j) as double;
fn fib(x: int) -> int {
    if x<=1 {
        let y : int = 2.3 as int;
        return 1;
    }
    else if i>2 {
        return 2;
    }
    else {
        return i;
    }
    let result: int = fib(x - 1);
    result = result + fib(x - 2);
    return result;
}



fn main() -> int {
    let l: int;
    let i: int = 0;
    let j: int;
    j = getint();
    while -i < j {
        putint(i);
        putchar(32);
        putint(fib(i));
        putln();
        i = i + 1;
    }
    const k: double = 1 as int as double;

    return -i+i*i as double as int - 1;
}